

clc
clear
close all




fs = 10000;  % Sampling frequency (in Hz)

% Frequency of the A note (440 Hz) -- 0
f_A = 440;
% Frequency of the B note (494 Hz) -- 1
f_B = 494;  
% Frequency of the C note (261 Hz) -- 2
f_C = 261;
% Frequency of the D note (293 Hz) -- 3
f_D = 293;
% Frequency of the E note (330 Hz) -- 4
f_E = 330; 
% Frequency of the F note (440 Hz) -- 5
f_F = 350;
% Frequency of the A note (391 Hz) -- 6
f_G = 391;

f1 = f_A;f2 = f_B;f3 = f_F;f4 = f_A;


[signal,t1,t2,t3,t4,buffer_duration]  = make_mystery_signal(f_A,f_B,f_F,f_A,fs);


% plot(t1+buffer_duration,log2(f1).*ones(size(t1)),'--r','LineWidth',1)
% plot(t2+buffer_duration,log2(f2).*ones(size(t2)),'--r','LineWidth',1)
% plot(t3+buffer_duration,log2(f3).*ones(size(t3)),'--r','LineWidth',1)
% plot(t4+buffer_duration,log2(f4).*ones(size(t4)),'--r','LineWidth',1)


function [signal,t1,t2,t3,t4,buffer_duration] = make_mystery_signal(f1,f2,f3,f4,fs)
    % Define the sampling frequency and time duration
    
    t = 0:1/fs:10;  % Time vector from 0 to 1 second with 1/fs spacing
    
    A1 = 1;A2 = 1;A3 = 1;A4 = 1;
        
    segment = 10;
    runt = round(length(t)/segment);
    % Generate sine waves for each note in different quarters
    t1 = t(1:runt);
    t2 = t(runt+1:2*runt);
    t3 = t((2*runt)+1:3*runt);
    t4 = t((3*runt)+1:4*runt);
    
    first_num = A1.*sin(2 * pi * f1 * t1);
    sec_num = A2.*sin(2 * pi * f2 * t2);
    third_num = A3.*sin(2 * pi * f3 * t3);
    fourth_num = A4.*sin(2 * pi * f4 * t4);
    
    
    % Concatenate the notes
    signal = [first_num, sec_num, third_num, fourth_num];
    
    
    % Generate random noise for the buffer
    buffer_duration = 1;  % Duration of the buffer (in seconds)
    buffer_samples = round(buffer_duration * fs);
    
    buffer_noise = 0.4* randn(1, buffer_samples);  % Adjust the amplitude (0.2 in this case) based on your preference
    
    % Add buffer with noise at the beginning and end
    signal = [buffer_noise, signal, buffer_noise];
    
    audiowrite('mystery_signal.wav',signal,fs)



end